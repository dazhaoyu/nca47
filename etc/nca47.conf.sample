[DEFAULT]## Options defined in ironic.common.exception## Used if there is a formatting error when generating an# exception message (a programming error). If True, raise an# exception; if False, use the unformatted message. (boolean# value)#fatal_exception_format_errors=false## Options defined in ironic.common.service## Seconds between running periodic tasks. (integer value)#periodic_interval=60# Name of this node. This can be an opaque identifier. It is# not necessarily a hostname, FQDN, or IP address. However,# the node name must be valid within an AMQP key, and if using# ZeroMQ, a valid hostname, FQDN, or IP address. (string# value)#host=localhost# The messaging driver to use, defaults to rabbit. Other drivers include amqp# and zmq. (string value)#rpc_backend = rabbit## Options defined in oslo.log## If set to true, the logging level will be set to DEBUG# instead of the default INFO level. (boolean value)#debug=false# If set to false, the logging level will be set to WARNING# instead of the default INFO level. (boolean value)#verbose=true# The name of a logging configuration file. This file is# appended to any existing logging configuration files. For# details about logging configuration files, see the Python# logging module documentation. Note that when logging# configuration files are used all logging configuration is# defined in the configuration file and other logging# configuration options are ignored (for example, log_format).# (string value)# Deprecated group/name - [DEFAULT]/log_config#log_config_append=<None># DEPRECATED. A logging.Formatter log message format string# which may use any of the available logging.LogRecord# attributes. This option is deprecated.  Please use# logging_context_format_string and# logging_default_format_string instead. This option is# ignored if log_config_append is set. (string value)#log_format=<None># Defines the format string for %%(asctime)s in log records.# Default: %(default)s . This option is ignored if# log_config_append is set. (string value)#log_date_format=%Y-%m-%d %H:%M:%S# (Optional) Name of log file to send logging output to. If no# default is set, logging will go to stderr as defined by# use_stderr. This option is ignored if log_config_append is# set. (string value)# Deprecated group/name - [DEFAULT]/logfile#log_file=<None># (Optional) The base directory used for relative log_file# paths. This option is ignored if log_config_append is set.# (string value)# Deprecated group/name - [DEFAULT]/logdir#log_dir=<None># Uses logging handler designed to watch file system. When log# file is moved or removed this handler will open a new log# file with specified path instantaneously. It makes sense# only if log_file option is specified and Linux platform is# used. This option is ignored if log_config_append is set.# (boolean value)#watch_log_file=false# Use syslog for logging. Existing syslog format is DEPRECATED# and will be changed later to honor RFC5424. This option is# ignored if log_config_append is set. (boolean value)#use_syslog=false# Enables or disables syslog rfc5424 format for logging. If# enabled, prefixes the MSG part of the syslog message with# APP-NAME (RFC5424). The format without the APP-NAME is# deprecated in Kilo, and will be removed in Mitaka, along# with this option. This option is ignored if# log_config_append is set. (boolean value)#use_syslog_rfc_format=true# Syslog facility to receive log lines. This option is ignored# if log_config_append is set. (string value)#syslog_log_facility=LOG_USER# Log output to standard error. This option is ignored if# log_config_append is set. (boolean value)#use_stderr=true# Format string to use for log messages with context. (string# value)#logging_context_format_string=%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [%(request_id)s %(user_identity)s] %(instance)s%(message)s# Format string to use for log messages when context is# undefined. (string value)#logging_default_format_string=%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s [-] %(instance)s%(message)s# Additional data to append to log message when logging level# for the message is DEBUG. (string value)#logging_debug_format_suffix=%(funcName)s %(pathname)s:%(lineno)d# Prefix each line of exception output with this format.# (string value)#logging_exception_prefix=%(asctime)s.%(msecs)03d %(process)d ERROR %(name)s %(instance)s# Defines the format string for %(user_identity)s that is used# in logging_context_format_string. (string value)#logging_user_identity_format=%(user)s %(tenant)s %(domain)s %(user_domain)s %(project_domain)s# List of package logging levels in logger=LEVEL pairs. This# option is ignored if log_config_append is set. (list value)#default_log_levels=amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,oslo.messaging=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN,urllib3.connectionpool=WARN,websocket=WARN,requests.packages.urllib3.util.retry=WARN,urllib3.util.retry=WARN,keystonemiddleware=WARN,routes.middleware=WARN,stevedore=WARN,taskflow=WARN,keystoneauth=WARN# Enables or disables publication of error events. (boolean# value)#publish_errors=false# The format for an instance that is passed with the log# message. (string value)#instance_format="[instance: %(uuid)s] "# The format for an instance UUID that is passed with the log# message. (string value)#instance_uuid_format="[instance: %(uuid)s] "# Enables or disables fatal status of deprecations. (boolean# value)#fatal_deprecations=false## Options defined in oslo.service.periodic_task## Some periodic tasks can be run in a separate process. Should# we run them here? (boolean value)#run_external_periodic_tasks=true## Options defined in oslo.service.service## Enable eventlet backdoor.  Acceptable values are 0, <port>,# and <start>:<end>, where 0 results in listening on a random# tcp port number; <port> results in listening on the# specified port number (and not enabling backdoor if that# port is in use); and <start>:<end> results in listening on# the smallest unused port number within the specified range# of port numbers.  The chosen port is displayed in the# service's log file. (string value)#backdoor_port=<None># Enables or disables logging values of all registered options# when starting a service (at DEBUG level). (boolean value)#log_options=true# Specify a timeout after which a gracefully shutdown server# will exit. Zero value means endless wait. (integer value)#graceful_shutdown_timeout=60[api]## Options defined in ironic.api## The IP address on which ironic-api listens. (string value)#host_ip=0.0.0.0# The TCP port on which ironic-api listens. (port value)#port=8080# The maximum number of items returned in a single response# from a collection resource. (integer value)#max_limit=1000# Public URL to use when building the links to the API# resources (for example, "https://nca47.host:8080"). If# None the links will be built using the request's host URL.# If the API is operating behind a proxy, you will want to# change this to represent the proxy's URL. Defaults to None.# (string value)#public_endpoint=<None># Number of workers for OpenStack Ironic API service. The# default is equal to the number of CPUs available if that can# be determined, else a default worker count of 1 is returned.# (integer value)#api_workers=<None># Enable the integrated stand-alone API to service requests# via HTTPS instead of HTTP. If there is a front-end service# performing HTTPS offloading from the service, this option# should be False; note, you will want to change public API# endpoint to represent SSL termination URL with# 'public_endpoint' option. (boolean value)#enable_ssl_api=false[database]## Options defined in ironic.db.sqlalchemy.models## MySQL engine to use. (string value)#mysql_engine=InnoDB## Options defined in oslo.db## The file name to use with SQLite. (string value)# Deprecated group/name - [DEFAULT]/sqlite_db#sqlite_db=oslo.sqlite# If True, SQLite uses synchronous mode. (boolean value)# Deprecated group/name - [DEFAULT]/sqlite_synchronous#sqlite_synchronous=true# The back end to use for the database. (string value)# Deprecated group/name - [DEFAULT]/db_backend#backend=sqlalchemy# The SQLAlchemy connection string to use to connect to the# database. (string value)# Deprecated group/name - [DEFAULT]/sql_connection# Deprecated group/name - [DATABASE]/sql_connection# Deprecated group/name - [sql]/connection#connection=<None># The SQLAlchemy connection string to use to connect to the# slave database. (string value)#slave_connection=<None># The SQL mode to be used for MySQL sessions. This option,# including the default, overrides any server-set SQL mode. To# use whatever SQL mode is set by the server configuration,# set this to no value. Example: mysql_sql_mode= (string# value)#mysql_sql_mode=TRADITIONAL# Timeout before idle SQL connections are reaped. (integer# value)# Deprecated group/name - [DEFAULT]/sql_idle_timeout# Deprecated group/name - [DATABASE]/sql_idle_timeout# Deprecated group/name - [sql]/idle_timeout#idle_timeout=3600# Minimum number of SQL connections to keep open in a pool.# (integer value)# Deprecated group/name - [DEFAULT]/sql_min_pool_size# Deprecated group/name - [DATABASE]/sql_min_pool_size#min_pool_size=1# Maximum number of SQL connections to keep open in a pool.# (integer value)# Deprecated group/name - [DEFAULT]/sql_max_pool_size# Deprecated group/name - [DATABASE]/sql_max_pool_size#max_pool_size=<None># Maximum number of database connection retries during# startup. Set to -1 to specify an infinite retry count.# (integer value)# Deprecated group/name - [DEFAULT]/sql_max_retries# Deprecated group/name - [DATABASE]/sql_max_retries#max_retries=10# Interval between retries of opening a SQL connection.# (integer value)# Deprecated group/name - [DEFAULT]/sql_retry_interval# Deprecated group/name - [DATABASE]/reconnect_interval#retry_interval=10# If set, use this value for max_overflow with SQLAlchemy.# (integer value)# Deprecated group/name - [DEFAULT]/sql_max_overflow# Deprecated group/name - [DATABASE]/sqlalchemy_max_overflow#max_overflow=<None># Verbosity of SQL debugging information: 0=None,# 100=Everything. (integer value)# Deprecated group/name - [DEFAULT]/sql_connection_debug#connection_debug=0# Add Python stack traces to SQL as comment strings. (boolean# value)# Deprecated group/name - [DEFAULT]/sql_connection_trace#connection_trace=false# If set, use this value for pool_timeout with SQLAlchemy.# (integer value)# Deprecated group/name - [DATABASE]/sqlalchemy_pool_timeout#pool_timeout=<None># Enable the experimental use of database reconnect on# connection lost. (boolean value)#use_db_reconnect=false# Seconds between retries of a database transaction. (integer# value)#db_retry_interval=1# If True, increases the interval between retries of a# database operation up to db_max_retry_interval. (boolean# value)#db_inc_retry_interval=true# If db_inc_retry_interval is set, the maximum seconds between# retries of a database operation. (integer value)#db_max_retry_interval=10# Maximum retries in case of connection error or deadlock# error before error is raised. Set to -1 to specify an# infinite retry count. (integer value)#db_max_retries=20[oslo_concurrency]## Options defined in oslo.concurrency## Enables or disables inter-process locks. (boolean value)# Deprecated group/name - [DEFAULT]/disable_process_locking#disable_process_locking=false# Directory to use for lock files.  For security, the# specified directory should only be writable by the user# running the processes that need locking. Defaults to# environment variable OSLO_LOCK_PATH. If external locks are# used, a lock path must be set. (string value)# Deprecated group/name - [DEFAULT]/lock_path#lock_path=<None>[ssl]## Options defined in oslo.service.sslutils## CA certificate file to use to verify connecting clients.# (string value)# Deprecated group/name - [DEFAULT]/ssl_ca_file#ca_file=<None># Certificate file to use when starting the server securely.# (string value)# Deprecated group/name - [DEFAULT]/ssl_cert_file#cert_file=<None># Private key file to use when starting the server securely.# (string value)# Deprecated group/name - [DEFAULT]/ssl_key_file#key_file=<None># SSL version to use (valid only if SSL enabled). Valid values# are TLSv1 and SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may# be available on some distributions. (string value)#version=<None># Sets the list of available ciphers. value should be a string# in the OpenSSL cipher list format. (string value)#ciphers=<None>[oslo_messaging_rabbit]## From oslo.messaging## Determines how the next RabbitMQ node is chosen in case the one we are# currently connected to becomes unavailable. Takes effect only if more than# one RabbitMQ node is provided in config. (string value)# Allowed values: round-robin, shuffle#kombu_failover_strategy = round-robin# Maximum number of RabbitMQ connection retries. Default is 0 (infinite retry# count). (integer value)# Deprecated group/name - [DEFAULT]/rabbit_max_retries#rabbit_max_retries = 0# How long to wait a missing client beforce abandoning to send it its replies.# This value should not be longer than rpc_response_timeout. (integer value)# Deprecated group/name - [DEFAULT]/kombu_reconnect_timeout#kombu_missing_consumer_retry_timeout = 60# The RabbitMQ broker address where a single node is used. (string value)# Deprecated group/name - [DEFAULT]/rabbit_host#rabbit_host = localhost# The RabbitMQ virtual host. (string value)# Deprecated group/name - [DEFAULT]/rabbit_virtual_host#rabbit_virtual_host = /# How long to backoff for between retries when connecting to RabbitMQ. (integer# value)# Deprecated group/name - [DEFAULT]/rabbit_retry_backoff#rabbit_retry_backoff = 2# Determines how the next RabbitMQ node is chosen in case the one we are# currently connected to becomes unavailable. Takes effect only if more than# one RabbitMQ node is provided in config. (string value)# Allowed values: round-robin, shuffle#kombu_failover_strategy = round-robin# RabbitMQ HA cluster host:port pairs. (list value)# Deprecated group/name - [DEFAULT]/rabbit_hosts#rabbit_hosts = $rabbit_host:$rabbit_port# Maximum number of RabbitMQ connection retries. Default is 0 (infinite retry# count). (integer value)# Deprecated group/name - [DEFAULT]/rabbit_max_retries#rabbit_max_retries = 0# The RabbitMQ broker port where a single node is used. (port value)# Minimum value: 1# Maximum value: 65535# Deprecated group/name - [DEFAULT]/rabbit_port#rabbit_port = 5672# Use HA queues in RabbitMQ (x-ha-policy: all). If you change this option, you# must wipe the RabbitMQ database. (boolean value)# Deprecated group/name - [DEFAULT]/rabbit_ha_queues#rabbit_ha_queues = false# Use durable queues in AMQP. (boolean value)# Deprecated group/name - [DEFAULT]/amqp_durable_queues# Deprecated group/name - [DEFAULT]/rabbit_durable_queues#amqp_durable_queues = false# SSL version to use (valid only if SSL enabled). Valid values are TLSv1 and# SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may be available on some# distributions. (string value)# Deprecated group/name - [DEFAULT]/kombu_ssl_version#kombu_ssl_version =# How long to wait before reconnecting in response to an AMQP consumer cancel# notification. (floating point value)# Deprecated group/name - [DEFAULT]/kombu_reconnect_delay#kombu_reconnect_delay = 1.0# RabbitMQ HA cluster host:port pairs. (list value)# Deprecated group/name - [DEFAULT]/rabbit_hosts#rabbit_hosts = $rabbit_host:$rabbit_port# The RabbitMQ login method. (string value)# Deprecated group/name - [DEFAULT]/rabbit_login_method#rabbit_login_method = AMQPLAIN# Use HA queues in RabbitMQ (x-ha-policy: all). If you change this option, you# must wipe the RabbitMQ database. (boolean value)# Deprecated group/name - [DEFAULT]/rabbit_ha_queues#rabbit_ha_queues = false# Number of seconds after which the Rabbit broker is considered down if# heartbeat's keep-alive fails (0 disable the heartbeat). EXPERIMENTAL (integer# value)#heartbeat_timeout_threshold = 60# Use durable queues in AMQP. (boolean value)# Deprecated group/name - [DEFAULT]/amqp_durable_queues# Deprecated group/name - [DEFAULT]/rabbit_durable_queues#amqp_durable_queues = false# Auto-delete queues in AMQP. (boolean value)# Deprecated group/name - [DEFAULT]/amqp_auto_delete#amqp_auto_delete = false# SSL cert file (valid only if SSL enabled). (string value)# Deprecated group/name - [DEFAULT]/kombu_ssl_certfile#kombu_ssl_certfile =# Connect over SSL for RabbitMQ. (boolean value)# Deprecated group/name - [DEFAULT]/rabbit_use_ssl#rabbit_use_ssl = false# The RabbitMQ userid. (string value)# Deprecated group/name - [DEFAULT]/rabbit_userid#rabbit_userid = guest# SSL version to use (valid only if SSL enabled). Valid values are TLSv1 and# SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may be available on some# distributions. (string value)# Deprecated group/name - [DEFAULT]/kombu_ssl_version#kombu_ssl_version =# The RabbitMQ password. (string value)# Deprecated group/name - [DEFAULT]/rabbit_password#rabbit_password = guest# The RabbitMQ userid. (string value)# Deprecated group/name - [DEFAULT]/rabbit_userid#rabbit_userid = guest# SSL key file (valid only if SSL enabled). (string value)# Deprecated group/name - [DEFAULT]/kombu_ssl_keyfile#kombu_ssl_keyfile =# How long to backoff for between retries when connecting to RabbitMQ. (integer# value)# Deprecated group/name - [DEFAULT]/rabbit_retry_backoff#rabbit_retry_backoff = 2# How often times during the heartbeat_timeout_threshold we check the# heartbeat. (integer value)#heartbeat_rate = 2# SSL key file (valid only if SSL enabled). (string value)# Deprecated group/name - [DEFAULT]/kombu_ssl_keyfile#kombu_ssl_keyfile =# The RabbitMQ broker port where a single node is used. (port value)# Minimum value: 1# Maximum value: 65535# Deprecated group/name - [DEFAULT]/rabbit_port#rabbit_port = 5672# The RabbitMQ password. (string value)# Deprecated group/name - [DEFAULT]/rabbit_password#rabbit_password = guest# How often times during the heartbeat_timeout_threshold we check the# heartbeat. (integer value)#heartbeat_rate = 2# SSL cert file (valid only if SSL enabled). (string value)# Deprecated group/name - [DEFAULT]/kombu_ssl_certfile#kombu_ssl_certfile =# The RabbitMQ login method. (string value)# Deprecated group/name - [DEFAULT]/rabbit_login_method#rabbit_login_method = AMQPLAIN# Auto-delete queues in AMQP. (boolean value)# Deprecated group/name - [DEFAULT]/amqp_auto_delete#amqp_auto_delete = false# SSL certification authority file (valid only if SSL enabled). (string value)# Deprecated group/name - [DEFAULT]/kombu_ssl_ca_certs#kombu_ssl_ca_certs =# Deprecated, use rpc_backend=kombu+memory or rpc_backend=fake (boolean value)# Deprecated group/name - [DEFAULT]/fake_rabbit#fake_rabbit = false# Number of seconds after which the Rabbit broker is considered down if# heartbeat's keep-alive fails (0 disable the heartbeat). EXPERIMENTAL (integer# value)#heartbeat_timeout_threshold = 60# The RabbitMQ virtual host. (string value)# Deprecated group/name - [DEFAULT]/rabbit_virtual_host#rabbit_virtual_host = /# Deprecated, use rpc_backend=kombu+memory or rpc_backend=fake (boolean value)# Deprecated group/name - [DEFAULT]/fake_rabbit#fake_rabbit = false# How long to wait before reconnecting in response to an AMQP consumer cancel# notification. (floating point value)# Deprecated group/name - [DEFAULT]/kombu_reconnect_delay#kombu_reconnect_delay = 1.0# How frequently to retry connecting with RabbitMQ. (integer value)#rabbit_retry_interval = 1# Connect over SSL for RabbitMQ. (boolean value)# Deprecated group/name - [DEFAULT]/rabbit_use_ssl#rabbit_use_ssl = false# How long to wait a missing client beforce abandoning to send it its replies.# This value should not be longer than rpc_response_timeout. (integer value)# Deprecated group/name - [DEFAULT]/kombu_reconnect_timeout#kombu_missing_consumer_retry_timeout = 60# SSL certification authority file (valid only if SSL enabled). (string value)# Deprecated group/name - [DEFAULT]/kombu_ssl_ca_certs#kombu_ssl_ca_certs =# How frequently to retry connecting with RabbitMQ. (integer value)#rabbit_retry_interval = 1# The RabbitMQ broker address where a single node is used. (string value)# Deprecated group/name - [DEFAULT]/rabbit_host#rabbit_host = localhost[agent]agent_net_ip = 192.168.0.1agent_ip = 192.168.0.2dc_name = DCYTPDCnetwork_zone = coreagent_type = fw[backend_driver]dns_driver = zdnsfirewall_driver = fake[zdns]dns_vres_id = da7f10eb-2d02-4f0c-8edd-839a3f5b8731host_ip = 192.168.0.1port = 20120view_id = default[fw_agent]fw_username = adminfw_passwd = password